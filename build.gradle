plugins {
    id 'org.springframework.boot' version '2.1.1.RELEASE' apply false
    id 'java'
}

allprojects {
    apply plugin: 'maven-publish'

    if(it.name !='spring-bus'){
        apply plugin: 'org.springframework.boot'
    }

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.geordie.spring-cloud'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "Greenwich.SR2")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }

    if(it.name !='spring-bus') {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            testImplementation 'org.springframework.boot:spring-boot-starter-test'
        }
    }
    dependencies {
        compile 'com.google.guava:guava:28.1-jre'
    }

    publishToMavenLocal.dependsOn(bootJar)
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

dependencies{
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-deployer-local', version: '2.0.4.RELEASE'
    compile'org.springframework.boot:spring-boot-starter-log4j2'

    compile'org.springframework.kafka:spring-kafka:2.2.7.RELEASE'
    compile'org.springframework.kafka:spring-kafka-test:2.2.7.RELEASE'
}

task SpringCloudRun(type:JavaExec) {
    main = "com.geordie.spring.SpringCloudApplication"
    classpath = sourceSets.main.runtimeClasspath
}

SpringCloudRun.dependsOn( allprojects.publishToMavenLocal)